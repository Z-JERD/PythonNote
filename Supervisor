nohup python test.py & 来保证其在后台运行不中断
c参考文档：https://www.jianshu.com/p/484bd73f1e80

安装：
    pip install supervisor 只能使用python去安装
    sudo apt-get install supervisor

把默认的配置生成到制定位置
    echo_supervisord_conf > /your_file_path/supervisord.conf

1.配置文件 supervisor.conf
    配置文件最后一行
    [include]
    files = /etc/supervisor/conf.d/*.conf

2.根据supervisor.conf配置的files在conf.d中新建.conf文件
    内容如下：
    [program:FileTransfer]
    directory = /home/jerd/FileTransfer ; 程序的启动目录
    command =/home/jerd/env/envpy3/bin/gunicorn -b 0.0.0.0:8088  fileupload:app  ;
    启动命令
    autostart = true     ; 在 supervisord 启动的时候也自动启动
    startsecs = 5        ; 启动 5 秒后没有异常退出，就当作已经正常启动了
    autorestart = true   ; 程序异常退出后自动重启
    startretries = 3     ; 启动失败自动重试次数，默认是 3
    user = root        ; 用哪个用户启动
    redirect_stderr = true  ; 把 stderr 重定向到 stdout，默认 false
    stdout_logfile_maxbytes = 20MB  ; stdout 日志文件大小，默认 50MB
    stdout_logfile_backups = 20     ; stdout 日志文件备份数
    ; stdout 日志文件，需要注意当指定目录不存在时无法正常启动，所以需要手动创建目录
    （supervisord 会自动创建日志文件）
    stdout_logfile = /home/jerd/logs/usercenter_stdout.log

    注意：
        1.command =/home/jerd/env/envpy3/bin/gunicorn -b 0.0.0.0:8088  fileupload:app
          /home/jerd/env/envpy3/bin/是Python在系统中的路径，在这里使用的是虚拟环境下的路径
        2.需要手动创建stdout_logfile文件的目录，mkdir -p /home/jerd/logs/
         不需要手动创建usercenter_stdout.log
        3.使用runserve启动  command=/usr/bin/python3 fileupload.py
        4.通过 environment来添加需要的环境变量
            environment=PYTHONPATH=$PYTHONPATH:/usr/bin/python3

1.启动服务端：
    查看 supervisord 是否在运行：ps aux | grep supervisord
    1.supervisord 或者 supervisord -c /etc/supervisord.conf
    报错：
        1.Error: Another program is already listening on a port that one of our HTTP servers is configured to use.
            Shut this program down first before starting supervisord.
        2.Unlinking stale socket /tmp/supervisor.sock
        解决方法：
        sudo unlink /tmp/supervisor.sock 或者 sudo unlink /var/run/supervisor.sock

2.启动supervisorctl（客户端）
    查看supervisorctl是否在运行：ps aux|grep supervisorctl
    将进程停止 supervisorctl stop all
    启动：sudo supervisorctl -c /your_file_path/supervisord.conf
    报错：unknown error making dispatchers for xxx ： EISDIR
    解决：查看stdout_logfile是否已经创建了usercenter_stdout.log，若已创建则删除

3.查看启动的状态和关闭服务
    $ supervisorctl status
    $ supervisorctl stop FileTransfer   要和[program:FileTransfer]中服务名一致
    $ supervisorctl start FileTransfer
    $ supervisorctl restart FileTransfer
    $ supervisorctl reread  读取有更新（增加）的配置文件，不会启动新添加的程序
    $ supervisorctl update  重启配置文件修改过的程序

