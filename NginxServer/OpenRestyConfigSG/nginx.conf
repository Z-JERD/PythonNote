user root;
#user  nobody;

worker_processes  5;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        /run/nginx.pid;

events {
    worker_connections  1024;
}


http {

    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;

    keepalive_timeout  65;

    gzip  on;


    tcp_nopush          on;
    tcp_nodelay         on;
    types_hash_max_size 2048;
    client_max_body_size 200m;

    access_log /usr/local/openresty/nginx/logs/nginx-access.log;
    error_log /usr/local/openresty/nginx/logs/nginx-error.log;

    lua_package_path "/usr/local/openresty/lualib/resty/?.lua;;";    #lua 模块
    lua_package_cpath "/usr/local/openresty/lualib/?.so;;"; #c模块

    server_tokens off;

    include sites-enabled/*.conf;                            # 配置多站点 配置文件放到统计目录下的sites-enabled文件夹中

   server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

   }

   server {

        listen      9000;
        server_name   _;

       location /secondary_income {

							include     uwsgi_params;

							uwsgi_pass   unix:/var/wsgi/secondary_income.socket;

						}

       location /secondary {

							include     uwsgi_params;

							uwsgi_pass   unix:/var/wsgi/secondary.socket;

						}
       location /ucs/ {

					alias  /root/static/;
				}

       location /lua {
                    default_type 'text/html';
                    content_by_lua 'ngx.say(ngx.var.uri)';    #lua调用nginx的API
                    #上面一行也可以替换成
                    # content_by_lua_file /usr/local/openresty/nginx/lua/auth_service.lua; #index.lua是自己写的
                    #将http://ip/lua的请求交给index.lua文件处理
	            }
   }

  server {

        listen      9001;
        server_name   _;

        location / {
                       #  default_type 'text/html';

                       # content_by_lua 'ngx.say(ngx.var.uri)';    #lua调用nginx的API

                        set $mod "";

                        set_by_lua_file $a /usr/local/openresty/nginx/lua/auth_service.lua;
                       # content_by_lua 'ngx.say(ngx.var.mod)';

                        include     uwsgi_params;

                        uwsgi_pass   unix:/var/wsgi/$mod.socket;

	    }
  }

   server {

        listen      9002;
        server_name   _;

        location / {

                    #set $file_path "";

                    content_by_lua_file /usr/local/openresty/nginx/lua/ucs_service.lua;

                    #alias  $file_path;
        }
	 location /__znc9zkej/ {
		alias  /root/static/;
	}
   }

}
